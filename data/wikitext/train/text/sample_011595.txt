 The same idea of using a DAG to represent a family of paths occurs in the binary decision diagram , a DAG @-@ based data structure for representing binary functions . In a binary decision diagram , each non @-@ sink vertex is labeled by the name of a binary variable , and each sink and each edge is labeled by a 0 or 1 . The function value for any truth assignment to the variables is the value at the sink found by following a path , starting from the single source vertex , that at each non @-@ sink vertex follows the outgoing edge labeled with the value of that vertex 's variable . Just as directed acyclic word graphs can be viewed as a compressed form of tries , binary decision diagrams can be viewed as compressed forms of decision trees that save space by allowing paths to rejoin when they agree on the results of all remaining decisions . 
